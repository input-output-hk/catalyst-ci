# Common Python UDCs and Builders.
VERSION 0.8

IMPORT ../../utilities/scripts AS scripts
IMPORT ../../ AS cat-ci

# cspell: words libjpeg ruff
uv-base:
    FROM ghcr.io/astral-sh/uv:0.8.9

    SAVE ARTIFACT /u*

python-base:
    FROM python:3.13.5-slim-bookworm

    # Install necessary packages
    RUN apt-get update && apt-get install -y \
        bash \
        curl \
        libffi-dev \
        gcc \
        musl-dev \
        zlib1g-dev \
        libjpeg-dev \
        git \
        ca-certificates

    # Gives our project a reliable location.
    RUN echo $HOME
    WORKDIR $HOME
    ENV PATH=$HOME/.local/bin:$HOME/bin:$PATH

    # Stop python code running in the container saving pointless .pyc files.
    ENV PYTHONDONTWRITEBYTECODE=1

    # Install UV directly from upstream container.
    COPY +uv-base/uv +uv-base/uvx $HOME/.local/bin

    RUN uv --help

    # Extension we use needs rust.
    #RUN curl https://sh.rustup.rs -sSf | bash -s -- -y
    #RUN echo 'source $HOME/.cargo/env' >> $HOME/.bashrc
    #ENV PATH="/root/.cargo/bin:${PATH}"

    # Install ruff for linting.
    RUN pip3 install ruff
    RUN pip3 install pyright

    # Universal build scripts we will always need and are not target dependent.
    COPY --dir scripts /scripts
    # Copy our common scripts so we can use them inside the container.
    DO scripts+ADD_BASH_SCRIPTS
    DO scripts+ADD_PYTHON_SCRIPTS

BUILDER:
    FUNCTION

    # Copy our dependencies.
    COPY pyproject.toml uv.lock Readme.md .

CHECK:
    FUNCTION
    ARG options

    # Execute the check script
    RUN /scripts/std_checks.py $options

LINT_PYTHON:
    # Linting all Python code is done with ruff
    # See: https://github.com/charliermarsh/ruff
    FUNCTION

    # Where we want to run the `lint` from. Use `.` to check the whole repo.
    ARG src=.

    FROM python:3.13.5-slim-bookworm
    WORKDIR /work

    # Install ruff
    RUN pip install ruff

    COPY $src .
    COPY cat-ci+repo-config/repo/ruff.toml ruff.toml.std

    RUN diff -Nau ruff.toml ruff.toml.std

    RUN ruff format --check && \
        ruff check --output-format=github .

