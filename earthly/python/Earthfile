VERSION 0.8

IMPORT ../../utilities/scripts AS scripts

# cspell: words libgcc ruff

# script: Copy the python scripts directory 
script:
    FROM scratch
    COPY --dir scripts scripts
    SAVE ARTIFACT /scripts scripts

ADD_PYTHON_TOOLS:
    FUNCTION

    # Install Python tools
    RUN apt-get update && \
        apt-get install -y \
        python3 \
        python3-venv \
        && rm -rf /var/lib/apt/lists/*

    RUN python3 --version
    
    # Create a virtual environment
    RUN python3 -m venv /opt/venv
    ENV PATH="/opt/venv/bin:$PATH"
    
    ENV PYTHONDONTWRITEBYTECODE=1  # Prevents .pyc file creation

    # Install Poetry
    # ENV POETRY_HOME="/opt/poetry"
    # RUN mkdir -p $POETRY_HOME && \
    #     curl -sSL https://install.python-poetry.org | python3 - && \
    #     ln -s "$POETRY_HOME/bin/poetry" /usr/local/bin/poetry


    # Install Linter and other tools
    RUN python3 -m pip install ruff==0.7.0
    RUN python3 -m pip install poetry==1.8.4
    # RUN python3 -m pip install rich==13.9.1

    # Adjust Poetry's configuration to optimize performance
    RUN poetry config installer.max-workers 10
    
    # Scripts
    COPY +script/scripts scripts
    DO scripts+ADD_BASH_SCRIPTS
    DO scripts+ADD_PYTHON_SCRIPTS

CHECK:
    FUNCTION

    # Execute the check script
    RUN scripts/std_checks.py

LINT:
    FUNCTION

    # Where we want to run the `lint` from. Use `.` to check the whole repo.
    ARG src=.
    RUN ruff check


# ------- delete below this line -------

python-base:
    FROM python:3.12-alpine3.20

    # Install necessary packages 
    RUN apk add --no-cache \
        bash \
        curl \
        libffi-dev \
        gcc \
        musl-dev \
        libgcc \
        zlib-dev \
        jpeg-dev \
        git

    # Poetry Installation directory.
    # Gives poetry and our poetry project a reliable location.
    WORKDIR /poetry
    ENV POETRY_HOME=/poetry
    ENV PATH=$POETRY_HOME/bin:$PATH

    # Stop python code running in the container saving pointless .pyc files.
    ENV PYTHONDONTWRITEBYTECODE=1

    # Install Poetry using the recommended installer.
    RUN curl -sSL https://install.python-poetry.org | python3 -

    # Adjust Poetry's configuration to prevent connection pool warnings.
    RUN poetry config installer.max-workers 10

    # Install ruff for linting.
    RUN pip3 install ruff
    RUN pip3 install rich

    # Universal build scripts we will always need and are not target dependent.
    COPY --dir scripts /scripts
    # Copy our common scripts so we can use them inside the container.
    DO scripts+ADD_BASH_SCRIPTS
    DO scripts+ADD_PYTHON_SCRIPTS

BUILDER:
    FUNCTION

    ARG opts

    # Copy our dependencies.
    COPY pyproject.toml poetry.lock Readme.md .

    # Install it all with poetry
    RUN poetry install $opts    


