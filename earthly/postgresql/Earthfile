# Common PostgreSQL Earthly builders
VERSION --global-cache 0.7

# cspell: words colordiff

postgres-base:
    FROM postgres:16.0-alpine3.18

    WORKDIR /root

    # Install necessary packages 
    # Expand this list as needed, rather than adding more tools in later containers.
    RUN apk add --no-cache \
            ripgrep \
            bash \
            colordiff \
            musl-dev \
            curl \
            gcc \
            py3-pip

    # Install SQLFluff
    RUN pip3 install sqlfluff==2.3.5
    RUN sqlfluff version

    # Get refinery
    COPY ../rust+rust-base/refinery /bin

    # Get nushell
    COPY ../../utilities/nushell+nushell-build/nu /bin

    # Copy our set SQL files
    COPY --dir sql /sql

    # Universal build scripts we will always need and are not target dependent.
    COPY --dir scripts /scripts
    # Copy our common scripts so we can use them inside the container.
    DO ../../utilities/scripts+ADD_BASH_SCRIPTS

    SAVE ARTIFACT /scripts /scripts

# Common build setup steps.
# Arguments:
#   sqlfluff_cfg - REQUIRED - Location of repos .sqlfluff configuration file.
#   migrations - OPTIONAL - Location of Migrations directory - DEFAULT: ./migrations
#   seed - OPTIONAL - Location of Seed data directory - DEFAULT: ./seed
#   refinery_toml - OPTIONAL - Location of refinery,toml which configures migrations. DEFAULT: ./refinery.toml
BUILDER:
    COMMAND

    ARG --required sqlfluff_cfg
    ARG migrations=./migrations
    ARG seed=./seed
    ARG refinery_toml=./refinery.toml
    
    FROM +postgres-base

    WORKDIR /build

    COPY --dir $sqlfluff_cfg .
    COPY --dir $migrations .
    COPY --dir $seed .
    COPY --dir $refinery_toml .

# Linter checks for sql files
CHECK:
    COMMAND

    RUN /scripts/std_checks.sh

# Format sql files
# Just explains how to auto-format sql files.
# Can not do it LOCALLY as the command will change ownership of the fixed files
# if run within docker.
FORMAT:
    COMMAND

    # Can not run format LOCALLY as it changes permissions of files to root:root
    RUN --no-cache printf "%s\n%s\n%s\n" \
        "SQL can only be formatted locally from the command line." \
        "Run locally installed 'sqlfluff' from the repo root:" \
        "    $ sqlfluff fix ."

# Internal: Integration Test container image
integration-test:
    FROM earthly/dind:alpine-3.18-docker-23.0.6-r7

    RUN apk add --no-cache \
            bash \
            postgresql15-client # We use PostgreSQL 16, but v15 clients will work OK with it.

    # Get nushell
    COPY ../../utilities/nushell+nushell-build/nu /bin

    COPY +postgres-base/scripts /scripts

    WORKDIR /test


INTEGRATION_TEST_SETUP:
    COMMAND

    FROM +integration-test


# Build PostgreSQL image.
# REQUIREMENTS: 
#  * prepare migrations files into the `./migrations` dir
#  * prepare seed data files into the `./data` dir (optional)
#  * prepare `refinery.toml` file
# Arguments:
#  * image_name: The name of the image (required).
BUILD:
    COMMAND
    ARG --required image_name

    USER postgres:postgres

    RUN /scripts/std_build.sh

    ENTRYPOINT ["/scripts/entry.sh"]

    # Push the container...
    SAVE IMAGE ${image_name}:latest

