VERSION 0.8

flutter-base:
    ARG FLUTTER_VERSION=3.22.0
    ARG WORKDIR=frontend

    FROM debian:bookworm-slim

    RUN apt-get update
    RUN apt-get install -y git curl unzip bzip2 bash jq gpg lcov
    COPY --dir scripts .
    RUN chmod +x scripts/install-chrome-linux64.sh && ./scripts/install-chrome-linux64.sh
    RUN chmod +x scripts/install-edge-linux64.sh && ./scripts/install-edge-linux64.sh
    RUN chmod +x scripts/install-firefox-linux64.sh && ./scripts/install-firefox-linux64.sh

    WORKDIR $WORKDIR

    RUN git clone --depth 1 --branch $FLUTTER_VERSION https://github.com/flutter/flutter.git /usr/local/flutter
    ENV PATH="/usr/local/flutter/bin:/usr/local/flutter/bin/cache/dart-sdk/bin:$HOME/.pub-cache/bin:${PATH}"
    RUN flutter --version
    RUN flutter doctor -v
    RUN flutter config --enable-web
    RUN dart pub global activate melos
    RUN dart pub global activate junitreport
    RUN dart pub global activate coverage

SETUP:
    FUNCTION
    FROM +flutter-base

BOOTSTRAP:
    FUNCTION
    FROM +flutter-base

    if [ -f "melos.yaml" ]; then \
        echo "Running melos bootstrap."; \
        RUN melos bootstrap \
    fi;

OPENAPI_CODE_GEN:
    FUNCTION
    FROM +flutter-base

    ARG SAVE_LOCALLY=false
    ARG WORKDIR
    ARG OPEN_API_SPEC_PATH

    FROM +src
    WORKDIR $WORKDIR
    COPY $OPEN_API_SPEC_PATH openapi/cat-gateway-api.json
    RUN flutter pub get
    RUN dart run build_runner build --delete-conflicting-outputs

    IF [ $SAVE_LOCALLY = true ]
        SAVE ARTIFACT lib/generated/catalyst_gateway/* AS LOCAL ./packages/catalyst_voices_services/lib/generated/catalyst_gateway/
    ELSE
        SAVE ARTIFACT lib/generated/catalyst_gateway
    END

OPENAPI_VALIDATE:
    FUNCTION
    FROM +flutter-base

    FROM +src
    WORKDIR /frontend/catalyst_voices/packages/catalyst_voices_services
    RUN dart run openapi_validate

    SAVE ARTIFACT openapi_validate

# ANALYZE:
#     FUNCTION
#     FROM +flutter-base

#     FROM +src
#     WORKDIR /frontend/catalyst_voices
#     RUN flutter analyze

#     SAVE ARTIFACT analyze

# FORMAT:
#     FUNCTION
#     FROM +flutter-base

#     FROM +src
#     WORKDIR /frontend/catalyst_voices
#     RUN flutter format --set-exit-if-changed .

#     SAVE ARTIFACT format

# UNIT_TESTS:
#     FUNCTION
#     FROM +flutter-base

#     FROM +src
#     WORKDIR /frontend/catalyst_voices
#     RUN flutter test

#     SAVE ARTIFACT test

# BUILD:
#     FUNCTION
#     FROM +flutter-base

#     FROM +src
#     WORKDIR /frontend/catalyst_voices
#     RUN flutter build web --release

#     SAVE ARTIFACT build/web