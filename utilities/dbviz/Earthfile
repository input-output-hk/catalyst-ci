# Common Rust UDCs and Builders.
VERSION --global-cache 0.7

# cspell: words rustup rustc automake autotools xutils miri nextest kani
# cspell: words TARGETPLATFORM TARGETOS TARGETVARIANT 
# cspell: words USERPLATFORM USEROS USERARCH USERVARIANT 
# cspell: words ripgrep colordiff rustfmt stdcfgs toolset toolsets

# Internal: Set up our target toolchains, and copy our files.
builder:
    FROM ../../earthly/rust+rust-base

    COPY --dir .cargo .config src .
    COPY Cargo.lock Cargo.toml .
    COPY clippy.toml deny.toml rustfmt.toml rust-toolchain.toml .

    DO ./../../earthly/rust+SETUP

## -----------------------------------------------------------------------------
##
## Standard CI targets.
##
## These targets are discovered and executed automatically by CI.

# check - Run check using the most efficient host tooling
# CI Automated Entry point.
check:
    FROM +builder

    RUN /scripts/std_checks.py

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-check:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +check

# build - Run build using the most efficient host tooling
# CI Automated Entry point.
build:
    FROM +builder
 
    RUN /scripts/std_build.py   --with_test \
                                --bins="dbviz/dbviz"

    SAVE ARTIFACT target/doc doc
    SAVE ARTIFACT target/release/dbviz dbviz

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-build:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +build

