VERSION 0.8

IMPORT github.com/earthly/lib/rust:3.0.2 AS rust
IMPORT ./../../earthly/rust AS rust-ci

# cspell: words stdcfgs toolset toolsets

# Internal: Set up our target toolchains, and copy our files.
builder:
    DO ./../../earthly/rust+SETUP

    COPY --dir .cargo .config src .
    COPY Cargo.toml .
    COPY clippy.toml deny.toml rustfmt.toml .

## -----------------------------------------------------------------------------
##
## Standard CI targets.
##
## These targets are discovered and executed automatically by CI.

# check - Run check using the most efficient host tooling
# CI Automated Entry point.
check:
    FROM +builder

    DO rust-ci+EXECUTE --cmd="/scripts/std_checks.py"

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-check:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +check

# build - Run build using the most efficient host tooling
# CI Automated Entry point.
build:
    FROM +builder
 
    DO rust-ci+EXECUTE \
        --cmd="/scripts/std_build.py --bins=dbviz/dbviz"

    SAVE ARTIFACT target/doc doc
    SAVE ARTIFACT target/release/dbviz dbviz

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
all-hosts-build:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +build

