VERSION --global-cache 0.7

# cspell: words USERARCH toolsets rustfmt nextest

# Set up our target toolchains, and copy our files.
builder:
    FROM ./../../earthly/rust+rust-base

    COPY --dir .cargo .config crates .
    COPY Cargo.lock Cargo.toml .
    COPY clippy.toml deny.toml rustfmt.toml .

## -----------------------------------------------------------------------------
##
## Standard CI targets.
##
## These targets are discovered and executed automatically by CI.

# Run check using the most efficient host tooling
# CI Automated Entry point.
check:
    FROM +builder

    DO ./../../earthly/rust+CHECK

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
check-all-hosts:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +check

# Run build using the most efficient host tooling
# CI Automated Entry point.
build:
    FROM +builder

    DO ./../../earthly/rust+BUILD --cov_report="coverage-report.info"
    DO ./../../earthly/rust+DOCS --libs="bar" --bins="foo/foo"

    DO ./../../earthly/rust+SMOKE_TEST --bin="foo"

    SAVE ARTIFACT target/doc doc
    SAVE ARTIFACT target/release/foo foo
    SAVE ARTIFACT target/nextest/ci/junit.xml junit-report.xml
    SAVE ARTIFACT coverage-report.info coverage-report.info

# Test which runs check with all supported host tooling.  Needs qemu or rosetta to run.
# Only used to validate tooling is working across host toolsets.
build-all-hosts:
    BUILD --platform=linux/amd64 --platform=linux/arm64 +build
