# WARNING: If you modify this file, please update the guide that it is dependent
# on in docs/guides/languages/go.md.
VERSION 0.8

IMPORT ../../earthly/go AS go-ci
IMPORT ../../earthly/container AS container

builder:
    FROM container+main-builder --tool=go
    COPY --dir cmd .
    COPY go.mod go.sum .
    RUN go mod tidy

check:
    FROM +builder
    DO go-ci+FIX_FMT --src="go.mod go.sum cmd"
    DO go-ci+FMT --src="go.mod go.sum cmd"
    DO go-ci+LINT --src="go.mod go.sum cmd"

build:
    FROM +builder
    ENV CGO_ENABLED=0
    RUN go build -ldflags="-extldflags=-static" -o bin/hello cmd/main.go

    # We save the artifact here so that future targets can use it.
    SAVE ARTIFACT bin/hello hello

test:
    # This target runs unit tests.
    FROM +build

    RUN go test ./...

# This target is normally named `release` but is renamed here in order to avoid
# the CI from picking it up and trying to release our example.
release-example:
    # This target is called by the CI when performing a release. It should use
    # `SAVE ARTIFACT` to save the release artifact which is then picked up by
    # the CI.
    FROM +build

    SAVE ARTIFACT bin/hello hello

# This target is normally named `publish` but is renamed here in order to avoid
# the CI from picking it up and trying to publish our example.
publish-example:
    # This target is called by CI when publishing images. It should use the
    # `SAVE IMAGE` command to save the image which is then picked up by the CI.
    # Note that we start from a "fresh" base image.
    FROM alpine:3.20.3
    WORKDIR /app
    ARG tag=latest  # Prefer to use `latest` by default, the CI will override this.

    COPY +build/hello .  # Use the cached artifact from the build target.

    ENTRYPOINT ["/app/hello"]
    SAVE IMAGE hello:${tag}
